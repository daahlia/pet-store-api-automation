{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\pet-store-api-automation-by-sabina\\\\test\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\pet-store-api-automation-by-sabina\",\"filename\":\"C:\\\\pet-store-api-automation-by-sabina\\\\test\\\\petStoreAPI.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\pet-store-api-automation-by-sabina\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"regenerator\":true}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\pet-store-api-automation-by-sabina\\test\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\pet-store-api-automation-by-sabina",
      "filename": "C:\\pet-store-api-automation-by-sabina\\test\\petStoreAPI.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\pet-store-api-automation-by-sabina",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "regenerator": true
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\pet-store-api-automation-by-sabina\\test\\petStoreAPI.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\pet-store-api-automation-by-sabina\\test\\petStoreAPI.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\pet-store-api-automation-by-sabina\\test\\",
        "sourceFileName": "petStoreAPI.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _chai = require(\"chai\");\n\nvar _supertest = _interopRequireDefault(require(\"supertest\"));\n\nvar request = (0, _supertest[\"default\"])('https://petstore.swagger.io/v2/');\nvar petId = \"\".concat(Math.floor(Math.random() * 9999));\nvar petName = \"testPetName-\".concat(Math.floor(Math.random() * 9999));\nvar petStatus;\ndescribe('1.AddANewPet', function () {\n  it('POST AddANewPet', /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n    var data;\n    return _regenerator[\"default\"].wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = {\n              id: petId,\n              name: petName,\n              status: \"pending\"\n            };\n            _context.next = 3;\n            return request.post('pet').set('Content-Type', 'application/json').send(data).then(function (res) {\n              console.log(res.body);\n              console.log(res.err);\n              (0, _chai.expect)(res.body).not.to.be.empty;\n              petId = res.body.id;\n              console.log(\"Newly created pet id: \" + petId);\n              petStatus = res.body.status;\n              console.log(\"Newly created pet id: \" + petStatus);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n});\ndescribe('2.FindPetByStatusPending', function () {\n  it('GET FindPetByStatusPending', function () {\n    console.log(\"Newly created pet id from FindPetByStatusPending: \" + petId);\n    request.get(\"pet/\".concat(petId)).end(function (err, res) {\n      console.log(res.body);\n      console.log(res.err);\n      (0, _chai.expect)(res.body).not.to.be.empty;\n      (0, _chai.expect)(res.status).to.equals(200);\n      (0, _chai.expect)(res.body).to.includes.keys('name', 'status');\n      (0, _chai.expect)(res.body.name).to.eql(\"\".concat(petName));\n      (0, _chai.expect)(res.body.status).to.eql('pending');\n    });\n  });\n});\ndescribe('2.FindNewlyCreatedPetById', function () {\n  it('GET FindNewlyCreatedPetById', function () {\n    console.log(\"Newly created pet id from FindNewlyCreatedPetById: \" + petId);\n    request.get(\"pet/\".concat(petId)).end(function (err, res) {\n      console.log(res.body);\n      console.log(res.err);\n      (0, _chai.expect)(res.body).not.to.be.empty;\n      (0, _chai.expect)(res.status).to.equals(200);\n      (0, _chai.expect)(res.body).to.includes.keys('name', 'status');\n      (0, _chai.expect)(res.body.name).to.eql(\"\".concat(petName));\n      (0, _chai.expect)(res.body.status).to.eql(\"\".concat(petStatus));\n    });\n  });\n});\ndescribe('3.UpdateNewlyCreatedPet', function () {\n  it('PUT UpdateNewlyCreatedPet', function () {\n    console.log(\"Newly created pet id from UpdateNewlyCreatedPet: \" + petId);\n    var data = {\n      id: petId,\n      name: petName,\n      status: \"available\"\n    };\n    request.put('pet').set('Content-Type', 'application/json').send(data).then(function (res) {\n      (0, _chai.expect)(res.body).not.to.be.empty;\n      (0, _chai.expect)(res.body).to.includes.keys('name', 'status');\n      (0, _chai.expect)(res.body.name).to.eql(\"\".concat(petName));\n      (0, _chai.expect)(res.body.status).to.eql('available');\n    });\n  });\n});\ndescribe('4.DeleteNewlyCreatedPetById', function () {\n  it('DELETE DeleteNewlyCreatedPetById', function () {\n    console.log(\"Newly created pet id from DeleteNewlyCreatedPetById: \" + petId);\n    request[\"delete\"](\"pet/\".concat(petId)).end(function (err, res) {\n      console.log(res.body);\n      console.log(res.err);\n      (0, _chai.expect)(res.body).not.to.be.empty;\n      (0, _chai.expect)(res.status).to.equals(200);\n      (0, _chai.expect)(res.body).to.includes.keys('code', 'message');\n      (0, _chai.expect)(res.body.code).to.eql(200);\n      (0, _chai.expect)(res.body.message).to.eql(\"\".concat(petId));\n    });\n  });\n});\ndescribe('5.FindADeletedPetById', function () {\n  it('GET FindADeletedPetById', function () {\n    console.log(\"Newly created pet id from GET FindADeletedPetById: \" + petId);\n    request.get(\"pet/\".concat(petId)).end(function (err, res) {\n      console.log(res.body);\n      console.log(res.err);\n      (0, _chai.expect)(res.body).not.to.be.empty;\n      (0, _chai.expect)(res.body).to.includes.keys('code', 'type', 'message');\n      (0, _chai.expect)(res.body.code).to.eql(1);\n      (0, _chai.expect)(res.body.type).to.eql('error');\n      (0, _chai.expect)(res.status).to.equals(404);\n      (0, _chai.expect)(res.body.message).to.eql('Pet not found');\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "petStoreAPI.js"
      ],
      "names": [
        "request",
        "petId",
        "Math",
        "floor",
        "random",
        "petName",
        "petStatus",
        "describe",
        "it",
        "data",
        "id",
        "name",
        "status",
        "post",
        "set",
        "send",
        "then",
        "res",
        "console",
        "log",
        "body",
        "err",
        "not",
        "to",
        "be",
        "empty",
        "get",
        "end",
        "equals",
        "includes",
        "keys",
        "eql",
        "put",
        "code",
        "message",
        "type"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\pet-store-api-automation-by-sabina\\test\\",
      "sourcesContent": [
        "import { assert, expect } from 'chai';\r\nimport supertest from 'supertest';\r\nconst request = supertest('https://petstore.swagger.io/v2/');\r\nlet petId = `${Math.floor(Math.random() * 9999)}`;\r\nlet petName = `testPetName-${Math.floor(Math.random() * 9999)}`;\r\nlet petStatus;\r\n\r\ndescribe('1.AddANewPet', ()=> {\r\n    it('POST AddANewPet', async() => {\r\n        const data = {\r\n        id: petId,  \r\n        name: petName,\r\n        status: \"pending\"\r\n        };\r\n    await request\r\n        .post('pet')\r\n        .set('Content-Type', 'application/json')\r\n        .send(data)\r\n        .then((res) => {\r\n            console.log(res.body);\r\n            console.log(res.err);\r\n            expect(res.body).not.to.be.empty;\r\n            petId = res.body.id;\r\n            console.log(\"Newly created pet id: \" + petId);           \r\n            petStatus = res.body.status;\r\n            console.log(\"Newly created pet id: \" + petStatus);            \r\n        });\r\n    });\r\n});\r\n\r\ndescribe('2.FindPetByStatusPending', () => {\r\n    it('GET FindPetByStatusPending', () => {\r\n        console.log(\"Newly created pet id from FindPetByStatusPending: \" + petId);\r\n    request.get(`pet/${petId}`).end((err,res) => {\r\n        console.log(res.body);\r\n        console.log(res.err);\r\n        expect(res.body).not.to.be.empty;\r\n        expect(res.status).to.equals(200);   \r\n        expect(res.body).to.includes.keys('name', 'status');\r\n        expect(res.body.name).to.eql(`${petName}`);\r\n        expect(res.body.status).to.eql('pending');\r\n       });\r\n    });\r\n});\r\n\r\ndescribe('2.FindNewlyCreatedPetById', () => {\r\n    it('GET FindNewlyCreatedPetById', () => {\r\n        console.log(\"Newly created pet id from FindNewlyCreatedPetById: \" + petId);\r\n    request.get(`pet/${petId}`).end((err,res) => {\r\n        console.log(res.body);\r\n        console.log(res.err);\r\n        expect(res.body).not.to.be.empty;\r\n        expect(res.status).to.equals(200);   \r\n        expect(res.body).to.includes.keys('name', 'status');\r\n        expect(res.body.name).to.eql(`${petName}`);\r\n        expect(res.body.status).to.eql(`${petStatus}`);\r\n       });\r\n    });\r\n});\r\n\r\ndescribe('3.UpdateNewlyCreatedPet', () => {\r\n    it('PUT UpdateNewlyCreatedPet', () => {\r\n        console.log(\"Newly created pet id from UpdateNewlyCreatedPet: \" + petId);\r\n        const data = {\r\n        id: petId,  \r\n        name: petName,\r\n        status: \"available\"\r\n        };\r\n    request\r\n        .put('pet')\r\n        .set('Content-Type', 'application/json')\r\n        .send(data)\r\n        .then((res) => {          \r\n            expect(res.body).not.to.be.empty;\r\n            expect(res.body).to.includes.keys('name', 'status');\r\n            expect(res.body.name).to.eql(`${petName}`);\r\n            expect(res.body.status).to.eql('available');\r\n        });\r\n    });\r\n});\r\n\r\n\r\ndescribe('4.DeleteNewlyCreatedPetById', () => {\r\n    it('DELETE DeleteNewlyCreatedPetById', () => {\r\n        console.log(\"Newly created pet id from DeleteNewlyCreatedPetById: \" + petId);\r\n    request.delete(`pet/${petId}`).end((err,res) => {\r\n        console.log(res.body);\r\n        console.log(res.err);\r\n        expect(res.body).not.to.be.empty;\r\n        expect(res.status).to.equals(200);   \r\n        expect(res.body).to.includes.keys('code', 'message');\r\n        expect(res.body.code).to.eql(200);\r\n        expect(res.body.message).to.eql(`${petId}`);\r\n        });\r\n    });\r\n});\r\n    \r\n\r\ndescribe('5.FindADeletedPetById', () => {\r\n    it('GET FindADeletedPetById', () => {\r\n        console.log(\"Newly created pet id from GET FindADeletedPetById: \" + petId);\r\n     request.get(`pet/${petId}`).end((err,res) => {\r\n        console.log(res.body);\r\n        console.log(res.err);\r\n        expect(res.body).not.to.be.empty;\r\n        expect(res.body).to.includes.keys('code', 'type', 'message');\r\n        expect(res.body.code).to.eql(1);\r\n        expect(res.body.type).to.eql('error');\r\n        expect(res.status).to.equals(404);   \r\n        expect(res.body.message).to.eql('Pet not found');       \r\n        });\r\n    });\r\n}); \r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1614915363976
  }
}